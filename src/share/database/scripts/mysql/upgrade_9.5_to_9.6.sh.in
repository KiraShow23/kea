#!/bin/sh

# Copyright (C) 2021 Internet Systems Consortium, Inc. ("ISC")
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# shellcheck disable=SC1091
# SC1091: Not following: ... was not specified as input (see shellcheck -x).

# Exit with error if commands exit with non-zero and if undefined variables are
# used.
set -eu

# shellcheck disable=SC2034
# SC2034: ... appears unused. Verify use (or export if used externally).
prefix="@prefix@"

# Include utilities. Use installed version if available and
# use build version if it isn't.
if [ -e @datarootdir@/@PACKAGE_NAME@/scripts/admin-utils.sh ]; then
    . "@datarootdir@/@PACKAGE_NAME@/scripts/admin-utils.sh"
else
    . "@abs_top_builddir@/src/bin/admin/admin-utils.sh"
fi

version=$(mysql_version "$@")

if test "${version}" != "9.5"; then
    printf 'This script upgrades 9.5 to 9.6. '
    printf 'Reported version is %s. Skipping upgrade.\n' "${version}"
    exit 0
fi

mysql "$@" <<EOF
# Temporary function to check if column exists.
CREATE FUNCTION columnExists(table_name_parameter TEXT, column_name_parameter TEXT)
RETURNS INT
RETURN (
  SELECT COUNT(column_name)
  FROM information_schema.columns
  WHERE table_schema = DATABASE()
  AND table_name = table_name_parameter
  AND column_name = column_name_parameter
);

# Temporary procedure to add column only if it doesn't exist to work around the
# 1.9.4 leak of cache_threshold and cache_max_age column alters in subnet and
# shared network tables in schema version 9.5.
DELIMITER $$
CREATE PROCEDURE addColumnIfNotExists(
  IN table_name TEXT,
  IN column_name TEXT,
  IN definition TEXT
)
BEGIN
  SET @exists := columnExists(table_name, column_name);
  IF (@exists = 0) THEN
    SET @alter = CONCAT('ALTER TABLE ', table_name);
    SET @alter = CONCAT(@alter, ' ', 'ADD COLUMN') ;
    SET @alter = CONCAT(@alter, ' ', column_name);
    SET @alter = CONCAT(@alter, ' ', definition);
    PREPARE statement FROM @alter;
    EXECUTE statement;
    DEALLOCATE PREPARE statement;
  END IF;
END;
$$
DELIMITER ;

# Add new lease cache parameters.
CALL addColumnIfNotExists('dhcp4_subnet', 'cache_threshold', 'FLOAT DEFAULT NULL');
CALL addColumnIfNotExists('dhcp4_subnet', 'cache_max_age', 'INT(10) DEFAULT NULL');
CALL addColumnIfNotExists('dhcp4_shared_network', 'cache_threshold', 'FLOAT DEFAULT NULL');
CALL addColumnIfNotExists('dhcp4_shared_network', 'cache_max_age', 'INT(10) DEFAULT NULL');
CALL addColumnIfNotExists('dhcp6_subnet', 'cache_threshold', 'FLOAT DEFAULT NULL');
CALL addColumnIfNotExists('dhcp6_subnet', 'cache_max_age', 'INT(10) DEFAULT NULL');
CALL addColumnIfNotExists('dhcp6_shared_network', 'cache_threshold', 'FLOAT DEFAULT NULL');
CALL addColumnIfNotExists('dhcp6_shared_network', 'cache_max_age', 'INT(10) DEFAULT NULL');

# Clean up.
DROP FUNCTION columnExists;
DROP PROCEDURE addColumnIfNotExists;

# Add an auto-increment ID as primary key to support Percona.
ALTER TABLE logs
    ADD id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY;

# Update the schema version number
UPDATE schema_version
    SET version = '9', minor = '6';

# This line concludes database upgrade to version 9.6.
EOF
